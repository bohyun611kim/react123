<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.coinis.webserver.holdport.mypage.mpg001.dao.HoldportInfoDAO">

	<resultMap type="kr.co.coinis.webserver.holdport.mypage.mpg001.vo.UserInfoVO" id="UserInfoVO">
		<result property="userId" 			column="USER_ID" 				jdbcType="VARCHAR"/>
		<result property="userName" 		column="USER_NAME"				jdbcType="VARCHAR"/>
		<result property="mobile" 			column="MOBILE"					jdbcType="VARCHAR"/>
		<result property="birthday" 		column="BIRTHDAY"				jdbcType="VARCHAR"/>
		<result property="mrktAgreeYn" 		column="MRKT_AGREE_YN" 			jdbcType="NUMERIC"/>
		<result property="authLevel" 		column="AUTH_LEVEL" 			jdbcType="NUMERIC"/>
		<result property="authMeansCd" 		column="AUTH_MEANS_CD" 			jdbcType="NUMERIC"/>
		<result property="userTypeCd" 		column="USER_TYPE_CD" 			jdbcType="NUMERIC"/>
		<result property="otpYn" 			column="OTP_YN" 				jdbcType="NUMERIC"/>
		<result property="regDt" 			column="REG_DT"	 				jdbcType="VARCHAR"/>
		<result property="idTypeCd" 		column="ID_TYPE_CD"	 			jdbcType="NUMERIC"/>
		<result property="idVerifiYn" 		column="ID_VERIFI_YN"	 		jdbcType="NUMERIC"/>
		<result property="idVerifiResultCd" column="ID_VERIFI_RESULT_CD"	jdbcType="NUMERIC"/>
		<result property="idVerifiErrDetCd" column="ID_VERIFI_ERR_DET_CD"	jdbcType="NUMERIC"/>
		<result property="idVerifiMemoCont" column="ID_VERIFI_MEMO_CONT"	jdbcType="VARCHAR"/>
		<result property="approvalStatCd" 	column="APPROVAL_STAT_CD"		jdbcType="VARCHAR"/>
		<result property="approvalProcMemo" column="APPROVAL_PROC_MEMO"		jdbcType="VARCHAR"/>

	</resultMap>

	<resultMap type="kr.co.coinis.webserver.holdport.mypage.mpg001.vo.RecommendInfoVO" id="RecommendInfoVO">
		<result property="recommandCd" 		column="RECOMMENDER_CD"	jdbcType="VARCHAR"/>
		<result property="recommandLink"	column="LINK"  			jdbcType="VARCHAR"/>
		<result property="totalCnt" 		column="TOTAL_CNT"  	jdbcType="NUMERIC"/>
	</resultMap>

	<resultMap type="kr.co.coinis.webserver.holdport.mypage.mpg001.vo.MemberInfoVO" id="MemberInfoMap">
		<result property="EXCHANGE_ID"						column="EXCHANGE_ID"					jdbcType="VARCHAR"/>
		<result property="USER_ID"                          column="USER_ID"                        jdbcType="NUMERIC"/>
		<result property="LOGIN_PASSWD"                     column="LOGIN_PASSWD"                   jdbcType="NUMERIC"/>
		<result property="LOGIN_PASSWD_CHG_DT"              column="LOGIN_PASSWD_CHG_DT"            jdbcType="NUMERIC"/>
		<result property="AUTH_LEVEL"                       column="AUTH_LEVEL"                     jdbcType="VARCHAR"/>
		<result property="AUTH_MEANS_CD"                    column="AUTH_MEANS_CD"                  jdbcType="VARCHAR"/>
		<result property="OTP_YN"                           column="OTP_YN"                         jdbcType="NUMERIC"/>
		<result property="OTP_KEY_VAL"                      column="OTP_KEY_VAL"                    jdbcType="VARCHAR"/>
		<result property="OTP_SET_DT"                       column="OTP_SET_DT"                     jdbcType="VARCHAR"/>
		<result property="SMS_USE_YN"                       column="SMS_USE_YN"                     jdbcType="NUMERIC"/>
		<result property="TEL_CD"                           column="TEL_CD"                         jdbcType="VARCHAR"/>
		<result property="MOBILE"                           column="MOBILE"                         jdbcType="VARCHAR"/>
		<result property="SMS_SET_DT"                       column="SMS_SET_DT"                     jdbcType="VARCHAR"/>
		<result property="FISH_ANTI_CODE_YN"                column="FISH_ANTI_CODE_YN"              jdbcType="NUMERIC"/>
		<result property="FISH_ANTI_CODE_VAL"               column="FISH_ANTI_CODE_VAL"             jdbcType="VARCHAR"/>
		<result property="LAST_LOGIN_IPADDR"                column="LAST_LOGIN_IPADDR"              jdbcType="VARCHAR"/>
		<result property="LAST_LOGIN_APP_VER"               column="LAST_LOGIN_APP_VER"             jdbcType="VARCHAR"/>
		<result property="LAST_LOGIN_DT"                    column="LAST_LOGIN_DT"                  jdbcType="VARCHAR"/>
		<result property="BLACK_LIST_YN"                    column="BLACK_LIST_YN"                  jdbcType="NUMERIC"/>
		<result property="AUTO_WTDRW_BLOCK_YN"              column="AUTO_WTDRW_BLOCK_YN"            jdbcType="NUMERIC"/>
		<result property="MRKT_AGREE_YN"                    column="MRKT_AGREE_YN"                  jdbcType="NUMERIC"/>
		<result property="JOIN_DT"                          column="JOIN_DT"                        jdbcType="VARCHAR"/>
		<result property="MEMBER_STAT_CD"                   column="MEMBER_STAT_CD"                 jdbcType="NUMERIC"/>
		<result property="UNSUBSCRIBE_DT"                   column="UNSUBSCRIBE_DT"                 jdbcType="VARCHAR"/>
		<result property="UNSUBSCRIBE_REAS_CD"              column="UNSUBSCRIBE_REAS_CD"            jdbcType="NUMERIC"/>
		<result property="UNSUBSCRIBE_REAS_CONT"            column="UNSUBSCRIBE_REAS_CONT"          jdbcType="VARCHAR"/>
		<result property="RECOMMENDER_CD"                   column="RECOMMENDER_CD"                 jdbcType="VARCHAR"/>
		<result property="REG_DT"                           column="REG_DT"                         jdbcType="VARCHAR"/>
		<result property="UPDT_DT"                          column="UPDT_DT"                        jdbcType="VARCHAR"/>
	</resultMap>

	<resultMap type="kr.co.coinis.webserver.holdport.mypage.mpg001.vo.AccessLogVO" id="AccessLogVO">
		<result property="dateTime"	column="HIST_INSERT_DT"	jdbcType="VARCHAR"/>
		<result property="publicIp"	column="PUBLIC_IP"		jdbcType="VARCHAR"/>
		<result property="os"		column="CLIENT_OS_NM"	jdbcType="VARCHAR"/>
		<result property="browser"	column="BROWSER_NM"		jdbcType="VARCHAR"/>
		<result property="type"		column="CODE_VAL_NM"	jdbcType="VARCHAR"/>
	</resultMap>

	<!-- ============================================================ -->
	<!-- 0. 공통 -->
	<!-- ============================================================ -->
	<!-- 사용자 로그 기록 -->
	<update id="procInsertUserRequestHist" statementType="CALLABLE">
		{
			CALL PR_WAS_INSERT_USER_REQUEST_HIST(
				#{exchangeId,	mode=IN, 	jdbcType=VARCHAR},
				#{userId, 		mode=IN, 	jdbcType=VARCHAR},
				#{reqOperCd, 	mode=IN, 	jdbcType=NUMERIC},
				#{resultCd, 	mode=IN, 	jdbcType=NUMERIC},
				#{logContents, 	mode=IN, 	jdbcType=VARCHAR},
				#{publicIp, 	mode=IN, 	jdbcType=VARCHAR},
				#{privateIp, 	mode=IN, 	jdbcType=VARCHAR},
				#{os, 			mode=IN, 	jdbcType=VARCHAR},
				#{browser, 		mode=IN, 	jdbcType=VARCHAR},
				#{rtnCd, 		mode=OUT, 	jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg, 		mode=OUT, 	jdbcType=VARCHAR}
			)
		}
	</update>

	<!-- ============================================================ -->
	<!-- 1. 회원정보 -->
	<!-- ============================================================ -->
	<!-- 회원정보 조회 -->
	<select id="selectUserInfo" resultMap="UserInfoVO">
		SELECT A.USER_ID
		       , A.USER_NAME
			   , AES_DECRYPT(A.MOBILE, SHA2(SHA2(CONCAT(A.USER_ID, A.REG_DT), 512), 512)) AS MOBILE
			   , A.MRKT_AGREE_YN
			   , A.AUTH_LEVEL
			   , B.USER_TYPE_CD
			   , A.OTP_YN
			   , A.AUTH_MEANS_CD
			   , B.ID_TYPE_CD
			   , B.ID_VERIFI_YN
			   , IFNULL(B.ID_VERIFI_RESULT_CD, -1) AS ID_VERIFI_RESULT_CD
			   , B.ID_VERIFI_ERR_DET_CD
			   , IFNULL(B.ID_VERIFI_MEMO_CONT, '') AS ID_VERIFI_MEMO_CONT
			   , IFNULL(C.APPROVAL_STAT_CD, -1) AS APPROVAL_STAT_CD
			   , C.APPROVAL_PROC_MEMO
		  FROM TB_MEMBER_INFO A
	INNER JOIN TB_MEMBER_INFO_EXTRA B
			ON A.EXCHANGE_ID = B.EXCHANGE_ID
		   AND A.USER_ID = B.USER_ID
	 LEFT JOIN (
	 				SELECT *
					  FROM TB_MEMBER_LEVEL5_MGR
					 WHERE EXCHANGE_ID = #{exchangeId}
					   AND USER_ID = #{userId}
       			  ORDER BY REC_SEQ_NO DESC
       				 LIMIT 1
			   ) C
       		ON B.EXCHANGE_ID = C.EXCHANGE_ID
		   AND B.USER_ID = C.USER_ID
		 WHERE A.EXCHANGE_ID = #{exchangeId}
		   AND A.USER_ID = #{userId}
	</select>

	<!-- 추천인정보 조회 -->
	<select id="selectRecommendInfo" resultMap="RecommendInfoVO">
		SELECT C.RECOMMENDER_CD, CONCAT(A.EXCHANGE_URL, CONCAT('/site/register?recommandId=', C.RECOMMENDER_CD )) AS LINK
			   , (SELECT COUNT(*)
					FROM TB_MEMBER_INFO
				   WHERE EXCHANGE_ID = #{exchangeId}
					 AND RECOMMENDER_CD = C.RECOMMENDER_CD
					 AND AUTH_LEVEL <![CDATA[ >= ]]> 3
					 AND MEMBER_STAT_CD = 2) AS TOTAL_CNT
		  FROM TB_EXCHANGE_INFO A
	INNER JOIN TB_MEMBER_INFO B
			ON A.EXCHANGE_ID = B.EXCHANGE_ID
	INNER JOIN TB_MEMBER_INFO_EXTRA C
			ON C.EXCHANGE_ID = B.EXCHANGE_ID
		   AND C.USER_ID = B.USER_ID
		 WHERE A.EXCHANGE_ID = #{exchangeId}
		   AND B.USER_ID = #{userId}
	</select>

	<!-- 비밀번호 확인 -->
	<select id="checkPassword" resultType="integer">
		SELECT COUNT(*)
		  FROM TB_MEMBER_INFO
		 WHERE EXCHANGE_ID = #{exchangeId}
		   AND USER_ID = #{userId}
		   AND LOGIN_PASSWD = SHA2(#{pw}, 512)
	</select>

	<!-- 비밀번호 변경 프로시저 -->
	<update id="procChangePassword" statementType="CALLABLE">
		{
			CALL PR_WAS_CHANGE_PASSWORD(
				#{exchangeId,	mode=IN, 	jdbcType=VARCHAR},
				#{userId, 		mode=IN, 	jdbcType=VARCHAR},
				#{newPw,		mode=IN, 	jdbcType=VARCHAR},
				#{rtnCd, 		mode=OUT, 	jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg, 		mode=OUT, 	jdbcType=VARCHAR}
			)
		}
	</update>

	<!-- 보안 인증 수단 변경 -->
	<update id="procChangeAuthMeansCd" statementType="CALLABLE">
		{
			CALL PR_WAS_CHANGE_AUTH_MEANS_CD(
				#{exchangeId,	mode=IN, 	jdbcType=VARCHAR},
				#{userId, 		mode=IN, 	jdbcType=VARCHAR},
				#{type,			mode=IN, 	jdbcType=VARCHAR},
				#{rtnCd, 		mode=OUT, 	jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg, 		mode=OUT, 	jdbcType=VARCHAR}
			)
		}
	</update>

	<!-- 마케팅 동의 여부 변경 -->
	<update id="updateMarketingAgree">
		UPDATE TB_MEMBER_INFO
		   SET MRKT_AGREE_YN = #{agree}
			   , UPDT_DT = DATE_FORMAT(NOW(6), '%Y%m%d%H%i%s')
		 WHERE EXCHANGE_ID = #{exchangeId}
		   AND USER_ID = #{userId}
	</update>

	<!-- ============================================================ -->
	<!-- 2. 보안인증 -->
	<!-- ============================================================ -->
	<select id="checkMobileDuplication" resultType="integer">
		SELECT COUNT(USER_ID)
		  FROM TB_MEMBER_INFO
		 WHERE EXCHANGE_ID = #{exchangeId}
		   AND MOBILE_HASH_VAL = SHA2(#{phoneNo}, 512)
	</select>

	<select id="selectAuthLevel" resultMap="UserInfoVO">
		SELECT A.AUTH_LEVEL, A.REG_DT
			   , AES_DECRYPT(B.FULL_NAME, SHA2(SHA2( CONCAT(A.USER_ID, A.REG_DT), 512), 512)) AS FULL_NAME
			   , AES_DECRYPT(B.BIRTHDAY, SHA2(SHA2( CONCAT(A.USER_ID, A.REG_DT), 512), 512)) AS BIRTHDAY
		  FROM TB_MEMBER_INFO A
	INNER JOIN TB_MEMBER_INFO_EXTRA B
			ON A.EXCHANGE_ID = B.EXCHANGE_ID
		   AND A.USER_ID = B.USER_ID
		 WHERE A.EXCHANGE_ID = #{exchangeId}
		   AND A.USER_ID = #{userId}
	</select>

	<!-- 마지막 인증요청 성공 시간 조회 -->
	<select id="selectLastAuthDateTime" resultType="string">
		SELECT IFNULL(HIST_INSERT_DT, 0)
		  FROM TB_USER_REQUEST_HIST
		 WHERE EXCHANGE_ID = #{exchangeId}
		   AND USER_ID = #{userId}
		   AND REQ_OPER_CD = 10
		   AND RESULT_CD = 0
	  ORDER BY HIST_INSERT_DT DESC
		 LIMIT 1
	</select>

	<update id="updateMemberInfoExtra">
		UPDATE TB_MEMBER_INFO
		   SET MOBILE = AES_ENCRYPT(#{mobile}, SHA2(SHA2(CONCAT(USER_ID, REG_DT), 512), 512)),
		   	   MOBILE_HASH_VAL = SHA2(#{mobile}, 512),
		   	   USER_NAME = #{userName},
		   	   SMS_SET_DT = DATE_FORMAT(NOW(6), '%Y%m%d%H%i%s'),
		   	   UPDT_DT = DATE_FORMAT(NOW(6),  '%Y%m%d%H%i%s'),
		   	   AUTH_LEVEL = 2,
		   	   AUTH_MEANS_CD = 2,
		   	   TEL_CD = '82',
		   	   SMS_USE_YN = 1
		 WHERE EXCHANGE_ID = TRIM(#{exchangeId})
		   AND USER_ID = TRIM(#{userId})
	</update>

	<!-- 2레벨 인증 휴대폰 번호 변경(회원 추가 정보 변경) -->
	<update id="procUpdateMemberInfoExtra" statementType="CALLABLE">
		{
			CALL PR_WAS_UPDATE_MEMBER_INFO_EXTRA_NEW(
				#{exchangeId,	mode=IN, 	jdbcType=VARCHAR},
				#{userId,		mode=IN, 	jdbcType=VARCHAR},
				null,
				null,
				null,
				null,
				#{userName,		mode=IN, 	jdbcType=VARCHAR},
				#{birthDay,		mode=IN, 	jdbcType=VARCHAR},
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				#{userId,		mode=IN, 	jdbcType=VARCHAR},
				#{regDt,		mode=IN, 	jdbcType=VARCHAR},
				#{ciValue,		mode=IN, 	jdbcType=VARCHAR},
				#{rtnCd, 		mode=OUT, 	jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg, 		mode=OUT, 	jdbcType=VARCHAR}
			)
		}
	</update>
	<!-- 2레벨 인증 휴대폰 번호 변경(회원 추가 정보 변경) -->


	<!-- 인증레벨 변경 -->
	<update id="procSetAuthLevel" statementType="CALLABLE">
		{
			CALL PR_WAS_SET_AUTH_LEVEL(
				#{exchangeId,	mode=IN, 	jdbcType=VARCHAR},
				#{userId,		mode=IN, 	jdbcType=VARCHAR},
				#{authLevel,	mode=IN, 	jdbcType=VARCHAR},
				#{rtnCd, 		mode=OUT, 	jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg, 		mode=OUT, 	jdbcType=VARCHAR}
			)
		}
	</update>

	<!-- 2레벨 인증 휴대폰 번호 변경(휴대폰 번호 변경) -->
	<update id="procSetSmsAuth" statementType="CALLABLE">
		{
			CALL PR_WAS_SET_SMS_AUTH(
				#{exchangeId,	mode=IN, 	jdbcType=VARCHAR},
				#{userId,		mode=IN, 	jdbcType=VARCHAR},
				#{smsUseYn,		mode=IN, 	jdbcType=NUMERIC},
				'82',
				#{mobile,		mode=IN, 	jdbcType=VARCHAR},
				#{userId,		mode=IN, 	jdbcType=VARCHAR},
				#{key2,			mode=IN, 	jdbcType=VARCHAR},
				#{rtnCd, 		mode=OUT, 	jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg, 		mode=OUT, 	jdbcType=VARCHAR}
			)
		}
	</update>

	<!-- 2레벨 인증 휴대폰 번호 변경(휴대폰 번호 변경) -->
	<update id="updatePhoneNo">
		UPDATE TB_MEMBER_INFO
		   SET MOBILE = AES_ENCRYPT(#{phoneNo}, SHA2(SHA2( CONCAT(USER_ID, REG_DT), 512), 512))
			   , MOBILE_HASH_VAL = SHA2(#{phoneNo}, 512)
		   	   , UPDT_DT = DATE_FORMAT(NOW(6),  '%Y%m%d%H%i%s')
		 WHERE EXCHANGE_ID = #{exchangeId}
		   AND USER_ID = #{userId}
	</update>

	<!-- ============================================================ -->
	<!-- 3. 접속관리 -->
	<!-- ============================================================ -->
	<!-- 사용자 로그 갯수 조회 -->
	<select id="selectAccessLogCnt" resultType="integer">
		SELECT COUNT(A.HIST_INSERT_DT)
		  FROM TB_USER_REQUEST_HIST A
	INNER JOIN TB_CODE_INFO B
			ON B.CODE_ID = 'C0060'
		   AND A.REQ_OPER_CD = B.REC_SEQ_NO
		 WHERE A.EXCHANGE_ID = #{exchangeId}
		   AND A.USER_ID = #{userId}
		   AND A.HIST_INSERT_DT <![CDATA[ >= ]]> CONCAT(#{startDate}, '000000000000')
		   AND A.HIST_INSERT_DT <![CDATA[ <= ]]> CONCAT(#{endDate}, '235959999999')
	</select>

	<!-- 사용자 로그 조회 -->
	<select id="selectAccessLog" resultMap="AccessLogVO">
		SELECT A.HIST_INSERT_DT, A.PUBLIC_IP, A.CLIENT_OS_NM, A.BROWSER_NM, B.CODE_VAL_NM
		  FROM TB_USER_REQUEST_HIST A
	INNER JOIN TB_CODE_INFO B
			ON B.CODE_ID = 'C0060'
		   AND A.REQ_OPER_CD = B.REC_SEQ_NO
		 WHERE A.EXCHANGE_ID = #{exchangeId}
		   AND A.USER_ID = #{userId}
		   AND A.HIST_INSERT_DT <![CDATA[ >= ]]> CONCAT(#{startDate}, '000000000000')
		   AND A.HIST_INSERT_DT <![CDATA[ <= ]]> CONCAT(#{endDate}, '235959999999')
	  ORDER BY A.HIST_INSERT_DT DESC
		 LIMIT #{pageNum}, 10
	</select>

	<!-- 인증번호 검사 -->
	<update id="procCheckAuthCode" statementType="CALLABLE">
		{
			CALL PR_WAS_CHECK_AUTH_CODE(
				#{exchangeId, 		mode=IN, jdbcType=VARCHAR},
				#{userId, 			mode=IN, jdbcType=VARCHAR},
				#{authPurposeCd, 	mode=IN, jdbcType=NUMERIC},
				#{authMeansCd, 		mode=IN, jdbcType=NUMERIC},
				#{authMeansKeyVal, 	mode=IN, jdbcType=VARCHAR},
				#{authCd, 			mode=IN, jdbcType=VARCHAR},
				#{rtnCd, 			mode=OUT, jdbcType=NUMERIC, javaType=integer},
				#{rtnMsg,			mode=OUT, jdbcType=VARCHAR}
			)
		}
	</update>

	<!-- otp key 값 조회 -->
	<select id="selectOtpKey" resultType="string">
		SELECT AES_DECRYPT(OTP_KEY_VAL, SHA2(SHA2( CONCAT(USER_ID, REG_DT), 512), 512)) AS OTP_KEY_VAL
		  FROM TB_MEMBER_INFO
    	 WHERE EXCHANGE_ID = #{exchangeId}
    	   AND USER_ID = #{userId}
    	   AND MEMBER_STAT_CD = 2
	</select>

</mapper>

